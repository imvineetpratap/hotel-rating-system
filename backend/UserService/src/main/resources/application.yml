server:
  port: 8081


spring:
  datasource:
    url: jdbc:mysql://localhost:3308/hotel_rating_db
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: user-service-1
#    configurations settings
  config:
    import: optional:configserver:http://localhost:8085
  #spring security config
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-68083666.okta.com/oauth2/default
      client:
          registration:
            my-internal-client:
              provider: okta
              authorization-grant-type: client_credentials
              scope: internal
              client-id: 0oa83iogezVgZOmKI5d7
              client-secret: zjC6C8f-pX0lCGWUk3pdz2P8D8-Gsy5JnnVSB6m5


          provider:
              okta:
                issuer-uri: https://dev-68083666.okta.com/oauth2/default
#  profiles:
#    active: prod
#eureka:
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka/
#  instance:
#    prefer-ip-address: true





#health config
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

#resilience4j configurations
resilience4j:
  circuitbreaker:
    instances:
      Rating_Hotel_Breaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      Rating_Hotel_retry:
        max-attempts: 3
        wait-duration: 5s
  #ratelimiter configurations
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 1s



#okta config
okta:
  oauth2:
    issuer: https://dev-68083666.okta.com/oauth2/default
    audience: api://default
